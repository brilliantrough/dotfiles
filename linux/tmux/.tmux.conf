### terminal color setting
# you need use "echo $TERM" first to decide which color you need to use
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
# set tmux to truecolor
set-option -ga terminal-overrides ",*256col*:Tc" 

set-window-option -g mode-keys vi 
# set-window-option -g utf8 on # utf8 invalid??

### time(ms) to show the message bar
set -g display-time 3000
set -g escape-time 200
### disable window title auto-rename
setw -g automatic-rename off
### monitor window message
setw -g monitor-activity on
### tmux set
setw -g mode-keys vi    
set -g visual-activity on
### disable mouse
set -g mouse off
### set history limit
set-option -g history-limit 5000
set-option -g status-keys vi                         

# bind r source-file ~/.tmux.conf \; display "Reloaded!"

#-- bindkeys --#
# prefix key
set -g prefix ^x
# set -g prefix C-x
# set -g prefix M-x
# unbind ^b
unbind ^b
bind ^x send-prefix
# bind C-x send-prefix
# bind M-x send-prefix

# split window
# vertical split (prefix -)
unbind '"'
bind - splitw -v
# horizontal split (prefix |)
unbind %
bind | splitw -h 

# select pane
bind k selectp -U # above (prefix k)
bind j selectp -D # below (prefix j)
bind h selectp -L # left (prefix h)
bind l selectp -R # right (prefix l)

bind L select-window -p # switch window
bind H select-window -n # switch window
bind W new-window

# copy mode
bind Escape copy-mode # enter copy mode (prefix Escape)
bind ^p pasteb        # paste buffer (prefix Ctrl+p)

# resize pane
# bind -r M-k resizep -U 5 # upward (prefix Ctrl+k)
# bind -r M-j resizep -D 5 # downward (prefix Ctrl+j)
# bind -r M-h resizep -L 5 # to the left (prefix Ctrl+h)
# bind -r M-l resizep -R 5 # to the right (prefix Ctrl+l)

# swap pane
# swap with the previous pane (prefix Ctrl+u)
# bind ^u swapp -U
# swap with the next pane (prefix Ctrl+d)
# bind ^d swapp -D

# misc
# select the last pane (prefix e)
# bind e lastp
# select the last window (prefix Ctrl+e)
# bind ^e last
# kill pane (prefix q)
# bind q killp
# kill window (prefix Ctrl+q)
# bind ^q killw

# ERROR config, it will totally control w
# bind -n w new-window

# bind-key c new-window -c "#{pane_current_path}"
# bind-key % split-window -h -c "#{pane_current_path}"
# bind-key '"' split-window -c "#{pane_current_path}"

# bind ^z run "tmux-zoom"

# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# TPM START

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# # List of plugins
set -g @plugin 'christoomey/vim-tmux-navigator'

# use y to yank
set -g @plugin 'tmux-plugins/tmux-yank'

# prefix + ^s = save current session
# prefix + ^r = restore last session
set -g @plugin 'tmux-plugins/tmux-resurrect'
# must check tmux show -g default-command
# set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# prefix + I to install above plugins
# prefix + U to update plugins
# prefix + alt + u to remove/uninstall plugins.
run '~/.tmux/plugins/tpm/tpm'

# Enable tmux-powerline
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
set-hook -g session-created 'run-shell "~/.tmux/tmux-powerline/powerline.sh init"' # prettifies the window-status segments

bind C-[ run '~/path/to/tmux-powerline/mute_powerline.sh left'		# Mute left statusbar.
bind C-] run '~/path/to/tmux-powerline/mute_powerline.sh right'		# Mute right statusbar.

